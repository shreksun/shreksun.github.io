<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://shreksun.github.io/</id>
    <title>Shrek Sun&apos;s Space</title>
    <updated>2019-07-15T07:05:06.101Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://shreksun.github.io/"/>
    <link rel="self" href="https://shreksun.github.io//atom.xml"/>
    <subtitle>温故而知新</subtitle>
    <logo>https://shreksun.github.io//images/avatar.png</logo>
    <icon>https://shreksun.github.io//favicon.ico</icon>
    <rights>All rights reserved 2019, Shrek Sun&apos;s Space</rights>
    <entry>
        <title type="html"><![CDATA[git 问题记录]]></title>
        <id>https://shreksun.github.io//post/git-wen-ti-ji-lu</id>
        <link href="https://shreksun.github.io//post/git-wen-ti-ji-lu">
        </link>
        <updated>2019-07-14T15:55:43.000Z</updated>
        <content type="html"><![CDATA[<p>同一个电脑连接两个github账号导致不能推送问题
https://blog.csdn.net/lwc863481702/article/details/78542727?utm_source=blogxgwz6
https://www.jianshu.com/p/f44ec31be799</p>
<!-- more -->]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[7.8-7.14ARTS打卡]]></title>
        <id>https://shreksun.github.io//post/7-8-7-14ARTS打卡</id>
        <link href="https://shreksun.github.io//post/7-8-7-14ARTS打卡">
        </link>
        <updated>2019-07-13T07:26:53.000Z</updated>
        <summary type="html"><![CDATA[<h3 id="algorithm">Algorithm</h3>
<p><a href="https://leetcode-cn.com/problems/counting-bits/submissions/">counting-bits</a></p>
]]></summary>
        <content type="html"><![CDATA[<h3 id="algorithm">Algorithm</h3>
<p><a href="https://leetcode-cn.com/problems/counting-bits/submissions/">counting-bits</a></p>
<!--more-->
<pre><code class="language-java">   class Solution {
    public  int[] countBits(int num) {
        List&lt;Integer&gt; numList = new ArrayList&lt;Integer&gt;();
        for (int i = 0; i &lt;= num; i++) {
            numList.add(i);
        }
        int[] result = numList.parallelStream().mapToInt(number -&gt; number = getBitNum(number)).toArray();
        return result;
    }

    private Integer getBitNum(Integer num) {
        int count = 0;
        while (num &gt; 0) {
            int bit = num % 2;
            if (bit == 1) {
                count ++;
            }
            num/=2;
        }
        return count;
    }
}
</code></pre>
<pre><code class="language-java">/**
 *  数字   0    1   2   3   4   5   6   7   8
 *  二进   0    1  10  11  100 101 110 111 1000
 *  1个数  0   1   1   2   1   2   2   3   1
 *  
 *  当前数i如果能整除 count = (i/2的count)
 *  不能整除 count = (i/2的count + 1)
 */

public int[] countBits2(int num) {
    int[] ans = new int[num + 1];
    int i = 0;
    while (i &lt;= num) {
        int d = i/2;
        int m = i%2;
        if (m == 0) {
            ans[i] = ans[d];
        }else {
            ans[i] = ans[d] + 1;
        }
        i++;
    }
    return ans;
}
</code></pre>
<h3 id="review">Review</h3>
<pre><code>ThreadPoolExecutor 源码学习
</code></pre>
<h3 id="tip">Tip</h3>
<p>用java8中的optional判空</p>
<pre><code class="language-java"> Optional.ofNullable(text).ifPresent(System.out::println);
</code></pre>
<h3 id="share">Share</h3>
<p><a href="https://www.ibm.com/developerworks/cn/java/j-lo-java8streamapi/index.html">Java 8 中的 Streams API 详解</a></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[7.1-7.7ARTS打卡]]></title>
        <id>https://shreksun.github.io//post/7-1-7-7ARTS打卡</id>
        <link href="https://shreksun.github.io//post/7-1-7-7ARTS打卡">
        </link>
        <updated>2019-07-07T13:30:43.000Z</updated>
        <summary type="html"><![CDATA[<h3 id="algorithm">Algorithm</h3>
<p><a href="https://leetcode-cn.com/problems/max-increase-to-keep-city-skyline/">max-increase-to-keep-city-skyline</a></p>
]]></summary>
        <content type="html"><![CDATA[<h3 id="algorithm">Algorithm</h3>
<p><a href="https://leetcode-cn.com/problems/max-increase-to-keep-city-skyline/">max-increase-to-keep-city-skyline</a></p>
<!--more-->
<pre><code class="language-java">   public int maxIncreaseKeepingSkyline(int[][] grid) {
        ArrayList&lt;Integer&gt; maxCols = new ArrayList&lt;Integer&gt;();
        ArrayList&lt;Integer&gt; maxLines = new ArrayList&lt;Integer&gt;();
        for (int i = 0; i &lt; grid.length; i++) {
            int maxLine = 0;
            int maxCol = 0;
            for (int j = 0; j &lt; grid[0].length; j++) {
                if (maxLine &lt; grid[i][j]) {
                    maxLine = grid[i][j];
                }
                if (maxCol &lt; grid[j][i]) {
                    maxCol = grid[j][i];
                }
            }
            maxLines.add(maxLine);
            maxCols.add(maxCol);
        }
        int count = 0;
        for (int i = 0; i &lt; grid.length; i++) {
            for (int j = 0; j &lt; grid[0].length; j++) {
               if (maxLines.get(i) &lt; maxCols.get(j)) {
                   count += maxLines.get(i) - grid[i][j];
               } else {
                   count += maxCols.get(j) - grid[i][j];
               }
            }

        }
        return count;
    }
}
</code></pre>
<h3 id="review">Review</h3>
<p><a href="https://www.programcreek.com/2012/04/java-vs-python-why-python-can-be-more-productive/">Java vs. Python (1): Simple Code Examples</a></p>
<h3 id="tip">Tip</h3>
<p>Mysql 在 8.0 版本之前 可以用</p>
<p><code>show profile；</code></p>
<p>查询上次查询的执行时间</p>
<p><code>select @@profiling; 查看是否开启</code></p>
<p><code>set profiling=1; 开启</code></p>
<h3 id="share">Share</h3>
<p><a href="https://www.infoq.cn/article/t-JqP7vrgPJkk9RFZWrz">学会用数据库的方式思考 SQL 是如何执行的</a></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[代码整洁之道记录]]></title>
        <id>https://shreksun.github.io//post/代码整洁之道记录</id>
        <link href="https://shreksun.github.io//post/代码整洁之道记录">
        </link>
        <updated>2019-07-02T12:32:35.000Z</updated>
        <summary type="html"><![CDATA[<h3 id="命名">命名</h3>
<ul>
<li>接口尽量不要加前缀</li>
<li>类名和对象名使用名词 方法使用动词</li>
<li>在同一个项目内，表达相同概念的名字尽量统一如(fetch，retrieve，get)</li>
<li>变量过多时使用一个类来组合。</li>
</ul>
]]></summary>
        <content type="html"><![CDATA[<h3 id="命名">命名</h3>
<ul>
<li>接口尽量不要加前缀</li>
<li>类名和对象名使用名词 方法使用动词</li>
<li>在同一个项目内，表达相同概念的名字尽量统一如(fetch，retrieve，get)</li>
<li>变量过多时使用一个类来组合。</li>
</ul>
<!--more-->
<h3 id="函数">函数</h3>
<ul>
<li>最好20行封顶，参数尽量少</li>
<li>如果对输入参数进行转换最好体现在返回值</li>
<li>最好把try catch分离出来另外封函数</li>
<li>逐步打磨函数</li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[6.24-6.30ARTS打卡]]></title>
        <id>https://shreksun.github.io//post/6-24-6-30ARTS打卡</id>
        <link href="https://shreksun.github.io//post/6-24-6-30ARTS打卡">
        </link>
        <updated>2019-06-30T11:59:37.000Z</updated>
        <summary type="html"><![CDATA[<h3 id="algorithm">Algorithm</h3>
<h3 id="review">Review</h3>
<p><a href="https://stackoverflow.com/questions/31420780/limit-1-is-very-slow-for-specific-records-using-different-keys">limit-1-is-very-slow-for-specific-records</a></p>
<p><a href="https://www.percona.com/blog/2006/09/01/mysql-order-by-limit-performance-optimization/">mysql-order-by-limit-performance-optimization</a></p>
]]></summary>
        <content type="html"><![CDATA[<h3 id="algorithm">Algorithm</h3>
<h3 id="review">Review</h3>
<p><a href="https://stackoverflow.com/questions/31420780/limit-1-is-very-slow-for-specific-records-using-different-keys">limit-1-is-very-slow-for-specific-records</a></p>
<p><a href="https://www.percona.com/blog/2006/09/01/mysql-order-by-limit-performance-optimization/">mysql-order-by-limit-performance-optimization</a></p>
<!--more-->
<h3 id="tip">Tip</h3>
<p>Limit order by一起使用时 有时候会出现索引选择的问题 mysql会选择一个概率上的最优解 有时候会选错</p>
<p>需要指定索引</p>
<p>例子：</p>
<p><code>SELECT * FROM A AS OU use index (IX_UserID_Role) INNER JOIN B AS OFF ON OU.OfflineActivityID = OFF.OfflineActivityID WHERE OU.UserID = xxx AND OFF.Type NOT IN (11,13) ORDER BY OU.AddTime DESC LIMIT 5</code></p>
<p>在limit比较小时使用的是addtime做索引 查询时间1.几秒</p>
<p>limit较大时使用UserID做索引</p>
<p>强制指定use index (IX_UserID_Role)索引后200ms以内</p>
<h3 id="share">Share</h3>
<p><a href="https://mp.weixin.qq.com/s/dKowmnYSV6cetfP1nXVRoQ">全面理解 RPC 远程调用</a></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[6.17-6.23ARTS打卡]]></title>
        <id>https://shreksun.github.io//post/6.17-6.23ARTS打卡</id>
        <link href="https://shreksun.github.io//post/6.17-6.23ARTS打卡">
        </link>
        <updated>2019-06-23T14:24:27.000Z</updated>
        <content type="html"><![CDATA[<h3 id="algorithm">Algorithm</h3>
<h3 id="review">Review</h3>
<h3 id="tip">Tip</h3>
<p>EXPLAIN EXTENDED 查看sql优化之后的语句</p>
<h3 id="share">Share</h3>
<p><a href="https://mp.weixin.qq.com/s/82UfmL4hYSZ1nUhnmLQr3A">一通骚操作，我把SQL执行效率提高了10000000倍！</a></p>
<p>嵌套子查询效率较低</p>
<p>列的区分度较低，需要建联合索引</p>
<!--more-->]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[6.10-6.16ARTS打卡]]></title>
        <id>https://shreksun.github.io//post/6-10-6-16ARTS打卡</id>
        <link href="https://shreksun.github.io//post/6-10-6-16ARTS打卡">
        </link>
        <updated>2019-06-13T08:01:08.000Z</updated>
        <summary type="html"><![CDATA[<h3 id="algorithm">Algorithm</h3>
<p>给定一组不含重复元素的整数数组 nums，返回该数组所有可能的子集（幂集）。</p>
<p>说明：解集不能包含重复的子集。</p>
]]></summary>
        <content type="html"><![CDATA[<h3 id="algorithm">Algorithm</h3>
<p>给定一组不含重复元素的整数数组 nums，返回该数组所有可能的子集（幂集）。</p>
<p>说明：解集不能包含重复的子集。</p>
<!--more-->
<p>示例:</p>
<p>输出:
[
[3],
[1],
[2],
[1,2,3],
[1,3],
[2,3],
[1,2],
[]
]</p>
<pre><code class="language-java">class Solution {
    public List&lt;List&lt;Integer&gt;&gt; subsets(int[] nums) {
        List&lt;List&lt;Integer&gt;&gt; result = new ArrayList&lt;List&lt;Integer&gt;&gt;();
        result.add(new ArrayList&lt;Integer&gt;());
        for(Integer n: nums) {
            int size = result.size();
            for(int i = 0; i &lt; size; i++) {
                List&lt;Integer&gt; newSub = new ArrayList&lt;&gt;(result.get(i));
                newSub.add(n);
                result.add(newSub);
            }
        }
        return result;
    }
}
</code></pre>
<h3 id="review">Review</h3>
<p><a href="https://www.programcreek.com/2013/12/what-exactly-is-null-in-java/">What exactly is null in Java?</a></p>
<p>null不是一个具体的实例对象，只是一个值表示变量没有引用</p>
<p>null具体存储在栈帧</p>
<h3 id="tip">Tip</h3>
<p>Error while compiling statement: FAILED: SemanticException [Error 10041]: No partition predicate found for Alias</p>
<p>hive严格查询要求查询语句中必须使用partition key</p>
<h3 id="share">Share</h3>
<p><a href="https://www.infoq.cn/article/djP0ux_KOm9Kr3XohWL7?from=singlemessage&amp;isappinstalled=0">互联网女皇报告解读：移动开发进入拐点，云计算正当时</a></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[hexo 记录]]></title>
        <id>https://shreksun.github.io//post/hexo-记录</id>
        <link href="https://shreksun.github.io//post/hexo-记录">
        </link>
        <updated>2019-06-04T13:05:52.000Z</updated>
        <summary type="html"><![CDATA[<ul>
<li>
<p>20190604</p>
<p>无法推送theme到git，查了一下发现是因为主题也是git clone下来的 所以无法推送，进入到该主题目录下，<code>rm -rf .git</code>清除主题git，可以推送到git</p>
</li>
</ul>
]]></summary>
        <content type="html"><![CDATA[<ul>
<li>
<p>20190604</p>
<p>无法推送theme到git，查了一下发现是因为主题也是git clone下来的 所以无法推送，进入到该主题目录下，<code>rm -rf .git</code>清除主题git，可以推送到git</p>
  <!--more-->
</li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[code]]></title>
        <id>https://shreksun.github.io//post/code</id>
        <link href="https://shreksun.github.io//post/code">
        </link>
        <updated>2019-05-22T12:32:41.000Z</updated>
        <summary type="html"><![CDATA[<h4 id="拷贝具有大量相同属性的类">拷贝具有大量相同属性的类</h4>
<pre><code class="language-java">//拷贝到target
public static void copyProperties(Object source, Object target) throws BeansException {
		copyProperties(source, target, null, null);
	}
</code></pre>
]]></summary>
        <content type="html"><![CDATA[<h4 id="拷贝具有大量相同属性的类">拷贝具有大量相同属性的类</h4>
<pre><code class="language-java">//拷贝到target
public static void copyProperties(Object source, Object target) throws BeansException {
		copyProperties(source, target, null, null);
	}
</code></pre>
<!--more-->
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[虚拟机字节码执行引擎]]></title>
        <id>https://shreksun.github.io//post/虚拟机字节码执行引擎</id>
        <link href="https://shreksun.github.io//post/虚拟机字节码执行引擎">
        </link>
        <updated>2019-05-20T13:06:23.000Z</updated>
        <summary type="html"><![CDATA[<h4 id="局部变量表">局部变量表</h4>
<ul>
<li>以变量槽slot为最小单位，某个变量超出变量域可以被回收给其他变量使用。</li>
<li>局部变量定义无赋值不可使用。</li>
</ul>
<h4 id="操作数栈">操作数栈</h4>
<ul>
<li>入栈出栈就是方法执行的过程。</li>
<li>数据类型必须和字节码指令的序列严格匹配。</li>
</ul>
]]></summary>
        <content type="html"><![CDATA[<h4 id="局部变量表">局部变量表</h4>
<ul>
<li>以变量槽slot为最小单位，某个变量超出变量域可以被回收给其他变量使用。</li>
<li>局部变量定义无赋值不可使用。</li>
</ul>
<h4 id="操作数栈">操作数栈</h4>
<ul>
<li>入栈出栈就是方法执行的过程。</li>
<li>数据类型必须和字节码指令的序列严格匹配。</li>
</ul>
<!--more-->
<h4 id="动态链接">动态链接</h4>
<ul>
<li>包含一个指向运行时常量池中该栈帧所属方法的引用。</li>
<li><strong>java.lang.String.intern()</strong> 查找常量池中有就返回 没有加入常量池</li>
</ul>
<h4 id="方法返回地址">方法返回地址</h4>
<ul>
<li>正常退出，调用者的pc计数器值就是返回地址，栈帧中会保存。</li>
<li>异常退出时，返回地址通过异常处理器决定。</li>
</ul>
]]></content>
    </entry>
</feed>